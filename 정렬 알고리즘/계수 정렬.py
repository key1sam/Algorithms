#!/usr/bin/env python
# coding: utf-8

# ### 계수 정렬
# - 특정한 조건이 부합할 때만 사용할 수 있지만 매우 빠르게 동작하는 정렬 알고리즘입니다.
# - 계수 정렬은 데이터의 크기 범위가 제한되어 정수 형태로 표현할 수 있을 때 사용 가능합니다.
# - 데이터의 개수가 N, 데이터(양수) 중 최대값이 K 일때 최악의 경우에도 수행 시간 O(N+K)를 보장합니다.

# ### 계수 정렬의 복잡도 분석
# - 계수 정렬의 시간 복잡도와 공간 복잡도는 모두 O(N+K)입니다.
# - 계수 정렬은 때에 따라서 심각한 비효율성을 초래할 수 있습니다.
# - 데이터가 0과 999,999로 단 2개만 존재하는 경우 공간을 심하게 낭비하게 됩니다.
# - 계수 정렬은 동일한 값을 가지는 데이터가 여러 개 등장할 때 효과적으로 사용할 수 있습니다.
# - 성적의 경우 100점을 맞은 학생이 여러 명일 수 있기 때문에 계수 정렬이 효과적입니다.

# In[5]:


num = [7, 5, 9, 0, 3, 1, 6, 2, 9, 1, 4, 8, 0, 5, 2]
count = [0] * (max(num) + 1) # 모든 범위를 포함하는 리스트 선언(모든 값 0으로 초기화)

for i in range(len(num)) :
    count[num[i]] += 1 # num[i]를 통해 값이 산출되면 그 값에 해당하는 count 인덱스를 증가해서 개수를 센다.

for i in range(len(count)) :
    for j in range(count[i]) :
        print(i, end = ' ')


# In[ ]:




